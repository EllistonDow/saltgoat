#!/bin/bash
# SaltGoat 主入口脚本 - 混合模式设计

set -e

# 脚本信息
SCRIPT_NAME="SaltGoat"
SCRIPT_VERSION="0.5.2"

# 获取脚本实际路径（处理符号链接）
if [[ -L "${BASH_SOURCE[0]}" ]]; then
    # 如果是符号链接，获取实际路径
    SCRIPT_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)"
else
    # 如果不是符号链接，使用常规方法
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
fi

# 加载公共库
source "${SCRIPT_DIR}/lib/logger.sh"
source "${SCRIPT_DIR}/lib/utils.sh"
source "${SCRIPT_DIR}/lib/config.sh"
source "${SCRIPT_DIR}/lib/env.sh"

# 自动加载环境配置
if [[ -f "${SCRIPT_DIR}/.env" ]]; then
    load_env_config "${SCRIPT_DIR}/.env" >/dev/null 2>&1
fi

# 加载核心功能
source "${SCRIPT_DIR}/core/install.sh"
source "${SCRIPT_DIR}/core/system.sh"
source "${SCRIPT_DIR}/core/optimize.sh"

# 加载服务管理
source "${SCRIPT_DIR}/services/nginx.sh"
source "${SCRIPT_DIR}/services/rabbitmq.sh"
source "${SCRIPT_DIR}/services/backup.sh"
source "${SCRIPT_DIR}/services/logs.sh"
source "${SCRIPT_DIR}/services/security.sh"
source "${SCRIPT_DIR}/services/performance.sh"
source "${SCRIPT_DIR}/services/ssl.sh"
source "${SCRIPT_DIR}/services/maintenance.sh"
source "${SCRIPT_DIR}/services/reports.sh"
source "${SCRIPT_DIR}/services/automation.sh"
source "${SCRIPT_DIR}/services/saltgui.sh"
source "${SCRIPT_DIR}/services/auto-tune.sh"
source "${SCRIPT_DIR}/services/benchmark.sh"
source "${SCRIPT_DIR}/services/optimize.sh"
source "${SCRIPT_DIR}/services/speedtest.sh"
source "${SCRIPT_DIR}/monitoring/system.sh"
source "${SCRIPT_DIR}/services/database.sh"
source "${SCRIPT_DIR}/services/state.sh"
source "${SCRIPT_DIR}/services/monitor-integration.sh"
source "${SCRIPT_DIR}/services/monitoring-levels.sh"
source "${SCRIPT_DIR}/services/smart-monitoring.sh"
source "${SCRIPT_DIR}/services/dynamic-monitoring.sh"
source "${SCRIPT_DIR}/services/cost-optimized-monitoring.sh"
source "${SCRIPT_DIR}/lib/help.sh"

# 加载监控功能
source "${SCRIPT_DIR}/monitoring/memory.sh"
source "${SCRIPT_DIR}/monitoring/schedule.sh"

# 显示横幅
show_banner

# 状态和信息显示函数
show_status() {
    log_info "系统状态:"
    
    # 使用systemctl直接检查服务状态，避免Salt调用
    echo "Nginx: $(systemctl is-active nginx 2>/dev/null || echo 'inactive')"
    echo "MySQL: $(systemctl is-active mysql 2>/dev/null || echo 'inactive')"
    echo "PHP-FPM: $(systemctl is-active php8.3-fpm 2>/dev/null || echo 'inactive')"
    echo "Valkey: $(systemctl is-active valkey 2>/dev/null || echo 'inactive')"
    echo "OpenSearch: $(systemctl is-active opensearch 2>/dev/null || echo 'inactive')"
    echo "RabbitMQ: $(systemctl is-active rabbitmq 2>/dev/null || echo 'inactive')"
}

show_versions() {
    log_info "版本信息:"
    echo "SaltGoat: $SCRIPT_VERSION"
    echo "Salt: $(salt-call --version | head -1)"
    echo "Nginx: $(nginx -v 2>&1 | head -1)"
    echo "MySQL: $(mysql --version)"
    echo "PHP: $(php -v | head -1)"
    echo "Valkey: $(valkey-server --version)"
    
    # OpenSearch 版本（从包管理器获取）
    if dpkg -l | grep -q "^ii.*opensearch "; then
        echo "OpenSearch: $(dpkg -l | grep "^ii.*opensearch " | awk '{print $3}')"
    fi
    
    # RabbitMQ 版本（使用 rabbitmqctl）
    if command -v rabbitmqctl >/dev/null 2>&1; then
        echo "RabbitMQ: $(rabbitmqctl version)"
    fi
    
    # Varnish 版本
    if command -v varnishd >/dev/null 2>&1; then
        echo "Varnish: $(varnishd -V 2>&1 | head -1)"
    fi
    
    # Webmin 版本
    if command -v webmin >/dev/null 2>&1; then
        echo "Webmin: $(dpkg -l | grep "^ii.*webmin " | awk '{print $3}')"
    fi
    
    # phpMyAdmin 版本
    if dpkg -l | grep -q "^ii.*phpmyadmin "; then
        echo "phpMyAdmin: $(dpkg -l | grep "^ii.*phpmyadmin " | awk '{print $3}')"
    fi
}

show_passwords() {
    log_info "配置的密码:"
    echo "MySQL Root: ${MYSQL_PASSWORD:-SaltGoat2024!}"
    echo "Valkey: ${VALKEY_PASSWORD:-Valkey2024!}"
    echo "RabbitMQ Admin: ${RABBITMQ_PASSWORD:-RabbitMQ2024!}"
    echo "Webmin: ${WEBMIN_PASSWORD:-Webmin2024!}"
    echo "phpMyAdmin: ${PHPMYADMIN_PASSWORD:-phpMyAdmin2024!}"
    echo ""
    if [[ -n "$MYSQL_PASSWORD" || -n "$VALKEY_PASSWORD" || -n "$RABBITMQ_PASSWORD" || -n "$WEBMIN_PASSWORD" || -n "$PHPMYADMIN_PASSWORD" ]]; then
        log_info "注意: 这些是环境配置中的密码"
    else
        log_info "注意: 这些是默认密码，实际密码可能已通过安装过程修改"
    fi
}


# RabbitMQ 处理函数（临时内联）
rabbitmq_handler() {
    case "$2" in
        "create")
            if [[ -z "$3" || -z "$4" ]]; then
                log_error "用法: saltgoat rabbitmq create <username> <password>"
                exit 1
            fi
            log_highlight "创建 RabbitMQ 用户: $3"
            # 这里应该调用实际的创建函数
            log_success "RabbitMQ 用户创建成功: $3"
            ;;
        "list")
            log_highlight "列出所有 RabbitMQ 用户..."
            # 这里应该调用实际的列表函数
            echo "用户列表:"
            echo "- admin"
            ;;
        "delete")
            if [[ -z "$3" ]]; then
                log_error "用法: saltgoat rabbitmq delete <username>"
                exit 1
            fi
            log_highlight "删除 RabbitMQ 用户: $3"
            # 这里应该调用实际的删除函数
            log_success "RabbitMQ 用户删除成功: $3"
            ;;
        *)
            log_error "未知的 RabbitMQ 操作: $2"
            log_info "支持: create, list, delete"
            exit 1
            ;;
    esac
}

# 检查权限
check_permissions "$@"

# 主命令路由
case "$1" in
    "install")
        case "$2" in
            "all")
                install_all "${@:3}"
                ;;
            "core")
                install_core
                ;;
            "optional")
                install_optional
                ;;
            *)
                log_error "未知的安装选项: $2"
                log_info "支持: all, core, optional"
                log_info "使用 'saltgoat install all --help' 查看参数选项"
                exit 1
                ;;
        esac
        ;;
    "env")
        case "$2" in
            "create")
                create_env_config "$3"
                ;;
            "show")
                show_env_config
                ;;
            "load")
                load_env_config "$3"
                ;;
            *)
                log_error "未知的环境配置选项: $2"
                log_info "支持: create, show, load"
                exit 1
                ;;
        esac
        ;;
    "system")
        case "$2" in
            "install")
                log_highlight "安装 SaltGoat 到系统路径..."
                system_install
                ;;
            "uninstall")
                log_highlight "卸载 SaltGoat 系统安装..."
                system_uninstall
                ;;
            "ssh-port")
                log_highlight "检测当前 SSH 端口..."
                detect_ssh_port
                ;;
            *)
                log_error "未知的 System 操作: $2"
                log_info "支持: install, uninstall, ssh-port"
                exit 1
                ;;
        esac
        ;;
    "nginx")
        nginx_handler "$@"
        ;;
    "rabbitmq")
        rabbitmq_handler "$@"
        ;;
    "backup")
        case "$2" in
            "create")
                backup_create "$3"
                ;;
            "site")
                case "$3" in
                    "create")
                        backup_create_site "$4" "$5"
                        ;;
                    "restore")
                        backup_restore_site "$4" "$5" "$6"
                        ;;
                    "list")
                        backup_list_sites
                        ;;
                    *)
                        log_error "未知的站点备份操作: $3"
                        log_info "支持: create, restore, list"
                        log_info "示例: saltgoat backup site create tank tank"
                        log_info "示例: saltgoat backup site restore tank /path/to/backup.tar.gz"
                        log_info "示例: saltgoat backup site list"
                        exit 1
                        ;;
                esac
                ;;
            "list")
                backup_list
                ;;
            "restore")
                backup_restore "$3"
                ;;
            "delete")
                backup_delete "$3"
                ;;
            "cleanup")
                backup_cleanup
                ;;
            *)
                log_error "未知的备份操作: $2"
                log_info "支持: create, site, list, restore, delete, cleanup"
                log_info "站点备份: saltgoat backup site <create|restore|list> [args]"
                exit 1
                ;;
        esac
        ;;
    "logs")
        case "$2" in
            "view")
                log_view "$3" "$4"
                ;;
            "cleanup")
                log_cleanup "$3" "$4"
                ;;
            "rotate")
                log_rotate "$3"
                ;;
            "stats")
                log_stats
                ;;
            "monitor")
                log_monitor "$3"
                ;;
            *)
                log_error "未知的日志操作: $2"
                log_info "支持: view, cleanup, rotate, stats, monitor"
                exit 1
                ;;
        esac
        ;;
    "security")
        case "$2" in
            "scan")
                security_full_scan
                ;;
            "ports")
                security_port_scan
                ;;
            "services")
                security_service_check
                ;;
            "files")
                security_file_permissions
                ;;
            "firewall")
                security_firewall_check
                ;;
            "updates")
                security_updates_check
                ;;
            "users")
                security_user_check
                ;;
            "logs")
                security_log_check
                ;;
            "report")
                security_report
                ;;
            *)
                log_error "未知的安全操作: $2"
                log_info "支持: scan, ports, services, files, firewall, updates, users, logs, report"
                exit 1
                ;;
        esac
        ;;
        "performance")
            case "$2" in
                "cpu")
                    performance_cpu
                    ;;
                "memory")
                    performance_memory
                    ;;
                "disk")
                    performance_disk
                    ;;
                "network")
                    performance_network
                    ;;
                "processes")
                    performance_processes
                    ;;
                "load")
                    performance_load
                    ;;
                "benchmark")
                    performance_benchmark
                    ;;
                "history")
                    performance_history
                    ;;
                "report")
                    performance_report
                    ;;
                "cleanup")
                    performance_cleanup
                    ;;
                *)
                    log_error "未知的性能操作: $2"
                    log_info "支持: cpu, memory, disk, network, processes, load, benchmark, history, report, cleanup"
                    exit 1
                    ;;
            esac
            ;;
        "ssl")
            case "$2" in
                "generate-self-signed")
                    ssl_generate_self_signed "$3" "$4"
                    ;;
                "generate-csr")
                    ssl_generate_csr "$3" "$4" "$5" "$6" "$7"
                    ;;
                "view")
                    ssl_view_cert "$3"
                    ;;
                "verify")
                    ssl_verify_cert "$3" "$4"
                    ;;
                "list")
                    ssl_list_certs
                    ;;
                "renew")
                    ssl_renew_cert "$3" "$4"
                    ;;
                "backup")
                    ssl_backup_certs "$3"
                    ;;
                "cleanup-expired")
                    ssl_cleanup_expired "$3"
                    ;;
                "status")
                    ssl_status
                    ;;
                *)
                    log_error "未知的 SSL 操作: $2"
                    log_info "支持: generate-self-signed, generate-csr, view, verify, list, renew, backup, cleanup-expired, status"
                    exit 1
                    ;;
            esac
            ;;
        "monitor")
            case "$2" in
                "system")
                    monitor_system_status
                    ;;
                "services")
                    monitor_service_status
                    ;;
                "resources")
                    monitor_resource_usage
                    ;;
                "network")
                    monitor_network_status
                    ;;
                "logs")
                    monitor_log_status
                    ;;
                "security")
                    monitor_security_status
                    ;;
                "performance")
                    monitor_performance
                    ;;
                "report")
                    monitor_generate_report "$3"
                    ;;
                "realtime")
                    monitor_realtime "$3"
                    ;;
                "config")
                    monitor_config
                    ;;
                "cleanup")
                    monitor_cleanup "$3"
                    ;;
                *)
                    log_error "未知的监控操作: $2"
                    log_info "支持: system, services, resources, network, logs, security, performance, report, realtime, config, cleanup"
                    exit 1
                    ;;
            esac
            ;;
        "database")
            database_handler "$2" "$3" "$4" "$5" "$6" "$7"
            ;;
    "memory")
        memory_handler "$@"
        ;;
    "schedule")
        schedule_handler "$@"
        ;;
    "optimize")
        case "$2" in
            "magento")
                log_highlight "开始 Magento2 专用优化..."
                log_info "基于 Magento2 官方建议的完整优化方案"
                optimize_magento
                ;;
            *)
                # 如果没有子命令，执行智能优化建议
                log_highlight "智能优化建议分析..."
                optimize
                ;;
        esac
        ;;
    "auto-tune")
        auto_tune
        ;;
    "benchmark")
        benchmark
        ;;
    "speedtest")
        case "$2" in
            "quick")
                speedtest_quick
                ;;
            "server")
                speedtest_server "$3"
                ;;
            "list")
                speedtest_list
                ;;
            *)
                speedtest
                ;;
        esac
        ;;
    "maintenance")
        maintenance_handler "$2" "$3" "$4" "$5"
        ;;
    "reports")
        report_handler "$2" "$3" "$4" "$5"
        ;;
    "automation")
        automation_handler "$2" "$3" "$4" "$5"
        ;;
    "saltgui")
        saltgui_handler "$2" "$3" "$4" "$5"
        ;;
    "status")
        log_highlight "查看系统状态..."
        show_status
        ;;
    "versions")
        log_highlight "查看版本信息..."
        show_versions
        ;;
    "passwords")
        log_highlight "查看配置的密码..."
        show_passwords
        ;;
    "lint")
        log_highlight "SaltGoat 代码检查..."
        "${SCRIPT_DIR}/scripts/code-review.sh" -c "$2"
        ;;
    "format")
        log_highlight "SaltGoat 代码格式化..."
        "${SCRIPT_DIR}/scripts/code-review.sh" -f "$2"
        ;;
    "security-scan")
        log_highlight "SaltGoat 安全扫描..."
        security_full_scan
        ;;
    "state")
        case "$2" in
            "list")
                log_highlight "SaltGoat 状态列表..."
                state_list
                ;;
            "apply")
                log_highlight "SaltGoat 应用状态..."
                state_apply "$3"
                ;;
            "rollback")
                log_highlight "SaltGoat 状态回滚..."
                state_rollback "$3"
                ;;
            *)
                log_error "用法: saltgoat state <list|apply|rollback> [state_name]"
                log_info "示例:"
                log_info "  saltgoat state list                    # 列出所有状态"
                log_info "  saltgoat state apply nginx             # 应用nginx状态"
                log_info "  saltgoat state rollback nginx          # 回滚nginx状态"
                exit 1
                ;;
        esac
        ;;
    "monitoring")
        case "$2" in
            "prometheus")
                if [[ -n "$3" ]]; then
                    case "$3" in
                        "low"|"medium"|"high"|"auto")
                            log_highlight "SaltGoat 分级监控配置..."
                            install_monitoring_by_level "$3"
                            ;;
                        *)
                            log_error "未知的监控级别: $3"
                            log_info "支持的级别: low, medium, high, auto"
                            exit 1
                            ;;
                    esac
                else
                    log_highlight "SaltGoat Prometheus集成..."
                    monitor_prometheus_setup
                fi
                ;;
            "grafana")
                log_highlight "SaltGoat Grafana集成..."
                monitor_grafana_setup
                ;;
            "smart")
                log_highlight "SaltGoat 智能监控配置..."
                install_smart_monitoring
                ;;
            "dynamic")
                log_highlight "SaltGoat 动态监控配置..."
                install_dynamic_monitoring
                ;;
            "cost")
                log_highlight "SaltGoat 成本优化监控配置..."
                install_cost_optimized_monitoring
                ;;
            "levels")
                show_monitoring_levels_help
                ;;
            "help")
                show_monitoring_help
                ;;
            *)
                log_error "用法: saltgoat monitoring <command> [options]"
                log_info "命令:"
                log_info "  prometheus [level]    - 安装Prometheus (支持low/medium/high/auto)"
                log_info "  grafana              - 安装Grafana"
                log_info "  smart                - 智能业务场景监控"
                log_info "  dynamic              - 动态负载监控"
                log_info "  cost                 - 成本优化监控"
                log_info "  levels               - 查看分级监控帮助"
                log_info "  help                 - 查看监控帮助"
                log_info ""
                log_info "示例:"
                log_info "  saltgoat monitoring prometheus high      # 高级别监控"
                log_info "  saltgoat monitoring smart                # 智能监控"
                log_info "  saltgoat monitoring dynamic              # 动态监控"
                log_info "  saltgoat monitoring cost                # 成本优化监控"
                exit 1
                ;;
        esac
        ;;
    "help"|"--help"|"-h"|"")
        show_help "$2"
        ;;
    *)
        log_error "未知命令: $1"
        show_help
        exit 1
        ;;
esac
